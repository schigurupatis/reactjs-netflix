{"ast":null,"code":"var _jsxFileName = \"/Users/santhakumarchigurupati/CSK/Professional/Projects/RectJS/reactjs-projects/netflix/src/components/VideoBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { API_OPTIONS } from '../utils/constants';\nimport { json } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTrailerVideo } from '../utils/moviesSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoBackground = ({\n  movieId\n}) => {\n  _s();\n  const trailerVideo = useSelector(store => {\n    var _store$movies;\n    return (_store$movies = store.movies) === null || _store$movies === void 0 ? void 0 : _store$movies.trailerVideo;\n  });\n  const dispatch = useDispatch();\n  // const [trailerId, setTrailerId] = useState(null)\n\n  //Fetch trailer video\n  const getMovieVideos = async () => {\n    const data = await fetch(\"https://api.themoviedb.org/3/movie/933260/videos?language=en-US\", API_OPTIONS);\n    const json = await data.json();\n    console.log(json);\n    const filterData = json.results.filter(video => video.type === \"Trailer\");\n    const trailer = filterData.length ? filterData[0] : json.results[0];\n    console.log(trailer);\n    // setTrailerId(trailer.key)\n    dispatch(addTrailerVideo(trailer));\n  };\n  useEffect(() => {\n    getMovieVideos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n      width: \"100%\",\n      height: \"100vh\",\n      src: \"https://www.youtube.com/embed/\" + (trailerVideo === null || trailerVideo === void 0 ? void 0 : trailerVideo.key),\n      title: \"YouTube video player\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoBackground, \"SL0ME/v5YoVIodnUm5orAlohk5A=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = VideoBackground;\nexport default VideoBackground;\nvar _c;\n$RefreshReg$(_c, \"VideoBackground\");","map":{"version":3,"names":["React","useEffect","useState","API_OPTIONS","json","useDispatch","useSelector","addTrailerVideo","jsxDEV","_jsxDEV","VideoBackground","movieId","_s","trailerVideo","store","_store$movies","movies","dispatch","getMovieVideos","data","fetch","console","log","filterData","results","filter","video","type","trailer","length","children","width","height","src","key","title","allow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/santhakumarchigurupati/CSK/Professional/Projects/RectJS/reactjs-projects/netflix/src/components/VideoBackground.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { API_OPTIONS } from '../utils/constants'\nimport { json } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTrailerVideo } from '../utils/moviesSlice';\n\nconst VideoBackground = ({movieId}) => {\n  const trailerVideo = useSelector(store => store.movies?.trailerVideo);\n  const dispatch = useDispatch()\n  // const [trailerId, setTrailerId] = useState(null)\n\n  \n  //Fetch trailer video\n  const getMovieVideos = async () => {\n    const data = await fetch(\n      \"https://api.themoviedb.org/3/movie/933260/videos?language=en-US\",\n      API_OPTIONS\n    );\n    const json = await data.json();\n    console.log(json)\n\n    const filterData = json.results.filter((video) => video.type === \"Trailer\");\n    const trailer = filterData.length ? filterData[0] : json.results[0];\n\n    console.log(trailer)\n    // setTrailerId(trailer.key)\n    dispatch(addTrailerVideo(trailer))\n  }\n  \n  useEffect(()=> {\n    getMovieVideos();\n  }, [])\n\n  return (\n    <div>\n      <iframe width=\"100%\" height=\"100vh\" src={\"https://www.youtube.com/embed/\"+trailerVideo?.key} title=\"YouTube video player\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"></iframe>\n\n    </div>\n  )\n}\n\nexport default VideoBackground"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,eAAe,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,eAAe,GAAGA,CAAC;EAACC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAMC,YAAY,GAAGP,WAAW,CAACQ,KAAK;IAAA,IAAAC,aAAA;IAAA,QAAAA,aAAA,GAAID,KAAK,CAACE,MAAM,cAAAD,aAAA,uBAAZA,aAAA,CAAcF,YAAY;EAAA,EAAC;EACrE,MAAMI,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B;;EAGA;EACA,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,IAAI,GAAG,MAAMC,KAAK,CACtB,iEAAiE,EACjEjB,WACF,CAAC;IACD,MAAMC,IAAI,GAAG,MAAMe,IAAI,CAACf,IAAI,CAAC,CAAC;IAC9BiB,OAAO,CAACC,GAAG,CAAClB,IAAI,CAAC;IAEjB,MAAMmB,UAAU,GAAGnB,IAAI,CAACoB,OAAO,CAACC,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,KAAK,SAAS,CAAC;IAC3E,MAAMC,OAAO,GAAGL,UAAU,CAACM,MAAM,GAAGN,UAAU,CAAC,CAAC,CAAC,GAAGnB,IAAI,CAACoB,OAAO,CAAC,CAAC,CAAC;IAEnEH,OAAO,CAACC,GAAG,CAACM,OAAO,CAAC;IACpB;IACAX,QAAQ,CAACV,eAAe,CAACqB,OAAO,CAAC,CAAC;EACpC,CAAC;EAED3B,SAAS,CAAC,MAAK;IACbiB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAAqB,QAAA,eACErB,OAAA;MAAQsB,KAAK,EAAC,MAAM;MAACC,MAAM,EAAC,OAAO;MAACC,GAAG,EAAE,gCAAgC,IAACpB,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEqB,GAAG,CAAC;MAACC,KAAK,EAAC,sBAAsB;MAACC,KAAK,EAAC;IAAqG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5O,CAAC;AAEV,CAAC;AAAA5B,EAAA,CAjCKF,eAAe;EAAA,QACEJ,WAAW,EACfD,WAAW;AAAA;AAAAoC,EAAA,GAFxB/B,eAAe;AAmCrB,eAAeA,eAAe;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}